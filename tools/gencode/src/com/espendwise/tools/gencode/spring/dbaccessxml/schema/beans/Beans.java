//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vJAXB 2.1.10 in JDK 6 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2012.03.02 at 09:40:28 AM MSK 
//


package com.espendwise.tools.gencode.spring.dbaccessxml.schema.beans;

import com.espendwise.tools.gencode.spring.dbaccessxml.schema.aop.AspectjAutoproxy;
import com.espendwise.tools.gencode.spring.dbaccessxml.schema.context.ComponentScan;
import com.espendwise.tools.gencode.spring.dbaccessxml.schema.context.PropertyPlaceholder;
import com.espendwise.tools.gencode.spring.dbaccessxml.schema.tx.AnnotationDriven;

import javax.xml.bind.annotation.*;
import java.util.ArrayList;
import java.util.List;


/**
 * <p>Java class for anonymous complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType>
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element ref="{http://www.springframework.org/schema/context}property-placeholder"/>
 *         &lt;choice maxOccurs="unbounded">
 *           &lt;element ref="{http://www.springframework.org/schema/aop}aspectj-autoproxy"/>
 *           &lt;element ref="{http://www.springframework.org/schema/beans}bean"/>
 *           &lt;element ref="{http://www.springframework.org/schema/context}component-scan"/>
 *           &lt;element ref="{http://www.springframework.org/schema/tx}annotation-driven"/>
 *         &lt;/choice>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "", propOrder = {
    "propertyPlaceholder",
    "aspectjAutoproxyOrBeanOrComponentScan"
})
@XmlRootElement(name = "beans")
public class Beans {

    @XmlElement(name = "property-placeholder", namespace = "http://www.springframework.org/schema/context", required = true)
    protected PropertyPlaceholder propertyPlaceholder;
    @XmlElements({
        @XmlElement(name = "bean", type = Bean.class),
        @XmlElement(name = "aspectj-autoproxy", namespace = "http://www.springframework.org/schema/aop", type = AspectjAutoproxy.class),
        @XmlElement(name = "annotation-driven", namespace = "http://www.springframework.org/schema/tx", type = AnnotationDriven.class),
        @XmlElement(name = "component-scan", namespace = "http://www.springframework.org/schema/context", type = ComponentScan.class),
        @XmlElement(name = "property-placeholder", namespace = "http://www.springframework.org/schema/context", type = PropertyPlaceholder.class)
})
    protected List<Object> aspectjAutoproxyOrBeanOrComponentScan;

    /**
     * Gets the value of the propertyPlaceholder property.
     * 
     * @return
     *     possible object is
     *     {@link PropertyPlaceholder }
     *     
     */
    public PropertyPlaceholder getPropertyPlaceholder() {
        return propertyPlaceholder;
    }

    /**
     * Sets the value of the propertyPlaceholder property.
     * 
     * @param value
     *     allowed object is
     *     {@link PropertyPlaceholder }
     *     
     */
    public void setPropertyPlaceholder(PropertyPlaceholder value) {
        this.propertyPlaceholder = value;
    }

    /**
     * Gets the value of the aspectjAutoproxyOrBeanOrComponentScan property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the aspectjAutoproxyOrBeanOrComponentScan property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getAspectjAutoproxyOrBeanOrComponentScan().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link Bean }
     * {@link AspectjAutoproxy }
     * {@link AnnotationDriven }
     * {@link ComponentScan }
     * 
     * 
     */
    public List<Object> getAspectjAutoproxyOrBeanOrComponentScan() {
        if (aspectjAutoproxyOrBeanOrComponentScan == null) {
            aspectjAutoproxyOrBeanOrComponentScan = new ArrayList<Object>();
        }
        return this.aspectjAutoproxyOrBeanOrComponentScan;
    }

}
