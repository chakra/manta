package com.espendwise.manta.model.view;
// Generated by Hibernate Tools


import com.espendwise.manta.model.ValueObject;
import java.util.List;
import java.util.Map;
/**
 * GenericReportResultView generated by hbm2java
*/
public class GenericReportResultView extends ValueObject implements java.io.Serializable {

    private static final long serialVersionUID = -1;

    public static final String NAME = "name";
    public static final String COLUMN_COUNT = "columnCount";
    public static final String HEADER = "header";
    public static final String TABLE = "table";
    public static final String WIDTH = "width";
    public static final String FANCY_DISPLAY = "fancyDisplay";
    public static final String TIME_ZONE = "timeZone";
    public static final String PAPER_ORIENTATION = "paperOrientation";
    public static final String PAPER_SIZE = "paperSize";
    public static final String TITLE = "title";
    public static final String USER_STYLE = "userStyle";
    public static final String SITE_HIERARCHY_LEVEL4_NAME = "siteHierarchyLevel4Name";
    public static final String RAW_OUTPUT = "rawOutput";
    public static final String REPORT_FORMAT = "reportFormat";
    public static final String WIDTH_FACTOR = "widthFactor";
    public static final String FREEZE_POSITION_ROW = "freezePositionRow";
    public static final String FREEZE_POSITION_COLUMN = "freezePositionColumn";

    private String name;
    private int columnCount;
    private List<GenericReportColumnView> header;
    private List table;
    private String width;
    private boolean fancyDisplay;
    private String timeZone;
    private String paperOrientation;
    private String paperSize;
    private List<GenericReportColumnView> title;
    private Map userStyle;
    private String siteHierarchyLevel4Name;
    private byte[] rawOutput;
    private String reportFormat;
    private double widthFactor;
    private int freezePositionRow;
    private int freezePositionColumn;

    public GenericReportResultView() {
    }
	
    public GenericReportResultView(String name) {
        this.setName(name);
    }

    public GenericReportResultView(String name, int columnCount, List<GenericReportColumnView> header, List table, String width, boolean fancyDisplay, String timeZone, String paperOrientation, String paperSize, List<GenericReportColumnView> title, Map userStyle, String siteHierarchyLevel4Name, byte[] rawOutput, String reportFormat, double widthFactor, int freezePositionRow, int freezePositionColumn) {
        this.setName(name);
        this.setColumnCount(columnCount);
        this.setHeader(header);
        this.setTable(table);
        this.setWidth(width);
        this.setFancyDisplay(fancyDisplay);
        this.setTimeZone(timeZone);
        this.setPaperOrientation(paperOrientation);
        this.setPaperSize(paperSize);
        this.setTitle(title);
        this.setUserStyle(userStyle);
        this.setSiteHierarchyLevel4Name(siteHierarchyLevel4Name);
        this.setRawOutput(rawOutput);
        this.setReportFormat(reportFormat);
        this.setWidthFactor(widthFactor);
        this.setFreezePositionRow(freezePositionRow);
        this.setFreezePositionColumn(freezePositionColumn);
    }

    public String getName() {
        return this.name;
    }

    public void setName(String name) {
        this.name = name;
        setDirty(true);
    }

    public int getColumnCount() {
        return this.columnCount;
    }

    public void setColumnCount(int columnCount) {
        this.columnCount = columnCount;
        setDirty(true);
    }

    public List<GenericReportColumnView> getHeader() {
        return this.header;
    }

    public void setHeader(List<GenericReportColumnView> header) {
        this.header = header;
        setDirty(true);
    }

    public List getTable() {
        return this.table;
    }

    public void setTable(List table) {
        this.table = table;
        setDirty(true);
    }

    public String getWidth() {
        return this.width;
    }

    public void setWidth(String width) {
        this.width = width;
        setDirty(true);
    }

    public boolean isFancyDisplay() {
        return this.fancyDisplay;
    }

    public void setFancyDisplay(boolean fancyDisplay) {
        this.fancyDisplay = fancyDisplay;
        setDirty(true);
    }

    public String getTimeZone() {
        return this.timeZone;
    }

    public void setTimeZone(String timeZone) {
        this.timeZone = timeZone;
        setDirty(true);
    }

    public String getPaperOrientation() {
        return this.paperOrientation;
    }

    public void setPaperOrientation(String paperOrientation) {
        this.paperOrientation = paperOrientation;
        setDirty(true);
    }

    public String getPaperSize() {
        return this.paperSize;
    }

    public void setPaperSize(String paperSize) {
        this.paperSize = paperSize;
        setDirty(true);
    }

    public List<GenericReportColumnView> getTitle() {
        return this.title;
    }

    public void setTitle(List<GenericReportColumnView> title) {
        this.title = title;
        setDirty(true);
    }

    public Map getUserStyle() {
        return this.userStyle;
    }

    public void setUserStyle(Map userStyle) {
        this.userStyle = userStyle;
        setDirty(true);
    }

    public String getSiteHierarchyLevel4Name() {
        return this.siteHierarchyLevel4Name;
    }

    public void setSiteHierarchyLevel4Name(String siteHierarchyLevel4Name) {
        this.siteHierarchyLevel4Name = siteHierarchyLevel4Name;
        setDirty(true);
    }

    public byte[] getRawOutput() {
        return this.rawOutput;
    }

    public void setRawOutput(byte[] rawOutput) {
        this.rawOutput = rawOutput;
        setDirty(true);
    }

    public String getReportFormat() {
        return this.reportFormat;
    }

    public void setReportFormat(String reportFormat) {
        this.reportFormat = reportFormat;
        setDirty(true);
    }

    public double getWidthFactor() {
        return this.widthFactor;
    }

    public void setWidthFactor(double widthFactor) {
        this.widthFactor = widthFactor;
        setDirty(true);
    }

    public int getFreezePositionRow() {
        return this.freezePositionRow;
    }

    public void setFreezePositionRow(int freezePositionRow) {
        this.freezePositionRow = freezePositionRow;
        setDirty(true);
    }

    public int getFreezePositionColumn() {
        return this.freezePositionColumn;
    }

    public void setFreezePositionColumn(int freezePositionColumn) {
        this.freezePositionColumn = freezePositionColumn;
        setDirty(true);
    }




}


