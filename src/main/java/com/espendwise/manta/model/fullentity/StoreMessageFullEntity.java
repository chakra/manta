package com.espendwise.manta.model.fullentity;

// Generated by Hibernate Tools

import com.espendwise.manta.model.TableObject;
import com.espendwise.manta.model.ValueObject;
import java.util.Date;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * StoreMessageFullEntity generated by hbm2java
*/
@Entity
@Table(name="CLW_STORE_MESSAGE")
public interface StoreMessageFullEntity  {

    public static final String STORE_MESSAGE_ID = "storeMessageId";
    public static final String MESSAGE_TITLE = "messageTitle";
    public static final String SHORT_DESC = "shortDesc";
    public static final String MESSAGE_TYPE = "messageType";
    public static final String POSTED_DATE = "postedDate";
    public static final String END_DATE = "endDate";
    public static final String FORCED_READ = "forcedRead";
    public static final String HOW_MANY_TIMES = "howManyTimes";
    public static final String FORCED_READ_COUNT = "forcedReadCount";
    public static final String PUBLISHED = "published";
    public static final String DISPLAY_ORDER = "displayOrder";
    public static final String LANGUAGE_CD = "languageCd";
    public static final String COUNTRY = "country";
    public static final String MESSAGE_AUTHOR = "messageAuthor";
    public static final String MESSAGE_ABSTRACT = "messageAbstract";
    public static final String MESSAGE_BODY = "messageBody";
    public static final String STORE_MESSAGE_STATUS_CD = "storeMessageStatusCd";
    public static final String ADD_BY = "addBy";
    public static final String ADD_DATE = "addDate";
    public static final String MOD_BY = "modBy";
    public static final String MOD_DATE = "modDate";
    public static final String STORE_MESSAGE_ASSOCS = "storeMessageAssocs";
    public static final String STORE_MESSAGE_DETAILS = "storeMessageDetails";


    public void setStoreMessageId(Long storeMessageId);
    @SequenceGenerator(name="generator", sequenceName="CLW_STORE_MESSAGE_SEQ")
    @Id 
    @GeneratedValue(strategy=javax.persistence.GenerationType.SEQUENCE, generator="generator")     
    @Column(name="STORE_MESSAGE_ID", nullable=false, columnDefinition="number", precision=38, scale=0)
    public Long getStoreMessageId();

    public void setMessageTitle(String messageTitle);
    
    @Column(name="MESSAGE_TITLE", length=128)
    public String getMessageTitle();

    public void setShortDesc(String shortDesc);
    
    @Column(name="SHORT_DESC")
    public String getShortDesc();

    public void setMessageType(String messageType);
    
    @Column(name="MESSAGE_TYPE", length=50)
    public String getMessageType();

    public void setPostedDate(Date postedDate);
    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="POSTED_DATE", length=7)
    public Date getPostedDate();

    public void setEndDate(Date endDate);
    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="END_DATE", length=7)
    public Date getEndDate();

    public void setForcedRead(String forcedRead);
    
    @Column(name="FORCED_READ", length=30)
    public String getForcedRead();

    public void setHowManyTimes(Long howManyTimes);
    
    @Column(name="HOW_MANY_TIMES", columnDefinition="number", precision=38, scale=0)
    public Long getHowManyTimes();

    public void setForcedReadCount(Long forcedReadCount);
    
    @Column(name="FORCED_READ_COUNT", columnDefinition="number", precision=38, scale=0)
    public Long getForcedReadCount();

    public void setPublished(String published);
    
    @Column(name="PUBLISHED", length=30)
    public String getPublished();

    public void setDisplayOrder(Long displayOrder);
    
    @Column(name="DISPLAY_ORDER", columnDefinition="number", precision=38, scale=0)
    public Long getDisplayOrder();

    public void setLanguageCd(String languageCd);
    
    @Column(name="LANGUAGE_CD", length=30)
    public String getLanguageCd();

    public void setCountry(String country);
    
    @Column(name="COUNTRY")
    public String getCountry();

    public void setMessageAuthor(String messageAuthor);
    
    @Column(name="MESSAGE_AUTHOR", length=60)
    public String getMessageAuthor();

    public void setMessageAbstract(String messageAbstract);
    
    @Column(name="MESSAGE_ABSTRACT", length=200)
    public String getMessageAbstract();

    public void setMessageBody(String messageBody);
    
    @Column(name="MESSAGE_BODY", length=4000)
    public String getMessageBody();

    public void setStoreMessageStatusCd(String storeMessageStatusCd);
    
    @Column(name="STORE_MESSAGE_STATUS_CD", nullable=false, length=30)
    public String getStoreMessageStatusCd();

    public void setAddBy(String addBy);
    
    @Column(name="ADD_BY")
    public String getAddBy();

    public void setAddDate(Date addDate);
    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="ADD_DATE", nullable=false, length=7)
    public Date getAddDate();

    public void setModBy(String modBy);
    
    @Column(name="MOD_BY")
    public String getModBy();

    public void setModDate(Date modDate);
    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="MOD_DATE", nullable=false, length=7)
    public Date getModDate();

    public void setStoreMessageAssocs(Set<StoreMessageAssocFullEntity> storeMessageAssocs);
    @OneToMany(fetch=FetchType.LAZY, mappedBy="storeMessageId")
    public Set<StoreMessageAssocFullEntity> getStoreMessageAssocs();

    public void setStoreMessageDetails(Set<StoreMessageDetailFullEntity> storeMessageDetails);
    @OneToMany(fetch=FetchType.LAZY, mappedBy="storeMessageId")
    public Set<StoreMessageDetailFullEntity> getStoreMessageDetails();

}

