package com.espendwise.manta.util;

public enum UserEmailNotificationTypeCodes implements NamedPropertyTypeCode {

    NOTIFCTN_SERVICE_ACCEPTED_DAYS(RefCodeNames.PROPERTY_TYPE_CD.NOTIFCTN_SERVICE_ACCEPTED_DAYS),
    NOTIFCTN_SCHEDULED_SERVICE(RefCodeNames.PROPERTY_TYPE_CD.NOTIFCTN_SCHEDULED_SERVICE),
    NOTIFCTN_SERVICE_ACCEPTED(RefCodeNames.PROPERTY_TYPE_CD.NOTIFCTN_SERVICE_ACCEPTED),
    NOTIFCTN_SERVICE_ACCEPTED_AUTO(RefCodeNames.PROPERTY_TYPE_CD.NOTIFCTN_SERVICE_ACCEPTED_AUTO),
    NOTIF_SERVICE_ACCEPTED_AUTO_V(RefCodeNames.PROPERTY_TYPE_CD.NOTIF_SERVICE_ACCEPTED_AUTO_V),
    NOTIF_SERVICE_REJ_BY_PROVIDER(RefCodeNames.PROPERTY_TYPE_CD.NOTIF_SERVICE_REJ_BY_PROVIDER),
    NOTIF_SERVICE_REJ_BY_STORE(RefCodeNames.PROPERTY_TYPE_CD.NOTIF_SERVICE_REJ_BY_STORE),
    NOTIF_SERVICE_COMPLETED(RefCodeNames.PROPERTY_TYPE_CD.NOTIF_SERVICE_COMPLETED),
    NOTIFCTN_RESCHEDULED_SERVICE(RefCodeNames.PROPERTY_TYPE_CD.NOTIFCTN_RESCHEDULED_SERVICE),
    NOTIFCTN_SERVICE_REMINDER(RefCodeNames.PROPERTY_TYPE_CD.OTIFCTN_SERVICE_REMINDER),
    NOTIF_REQ_SERVICE_APPROVAL(RefCodeNames.PROPERTY_TYPE_CD.NOTIF_REQ_SERVICE_APPROVAL),
    NOTIF_INVOICE_REJECTED(RefCodeNames.PROPERTY_TYPE_CD.NOTIF_INVOICE_REJECTED),
    NOTIFCTN_NO_SHOW(RefCodeNames.PROPERTY_TYPE_CD.NOTIFCTN_NO_SHOW),
    NOTIFCTN_SMS_NO_SHOW(RefCodeNames.PROPERTY_TYPE_CD.NOTIFCTN_SMS_NO_SHOW),
    NOTIFCTN_INVOICE_REJECTED(RefCodeNames.PROPERTY_TYPE_CD.NOTIFCTN_INVOICE_REJECTED),
    NOTIFCTN_SERVICE_REMINDER_DAYS_DAILY(RefCodeNames.PROPERTY_TYPE_CD.NOTIFCTN_SERVICE_REMINDER_DAYS_DAILY),
    NOTIFCTN_SERVICE_REMINDER_DAYS_WEEKLY(RefCodeNames.PROPERTY_TYPE_CD.NOTIFCTN_SERVICE_REMINDER_DAYS_WEEKLY),
    RECEIVE_INV_MISSING_EMAIL(RefCodeNames.PROPERTY_TYPE_CD.RECEIVE_INV_MISSING_EMAIL),
    CUTOFF_TIME_EMAIL_REMINDER_CNT(RefCodeNames.PROPERTY_TYPE_CD.CUTOFF_TIME_EMAIL_REMINDER_CNT);

    private String typeCode;

    UserEmailNotificationTypeCodes(String typeCode) {
        this.typeCode = typeCode;
    }

    public String getTypeCode() {
        return typeCode;
    }

    @Override
    public String toString() {
        return name();
    }
}